name: Deploy

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      TF_VAR_db_password: ${{ secrets.DB_PASSWORD }}
      TF_VAR_db_username: ${{ secrets.DB_USERNAME }}
      TF_VAR_db_name: ${{ secrets.DB_NAME }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
          
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init

      - name: Terraform Plan
        working-directory: ./terraform
        run: terraform plan

      - name: Terraform Apply
        working-directory: ./terraform
        run: terraform apply -auto-approve

      - name: Login to ECR
        run: |
          aws ecr get-login-password --region us-west-2 | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-west-2.amazonaws.com

      - name: Build backend Docker image
        run: docker build -t writing-analyzer-backend:latest ./backend

      - name: Build frontend Docker image
        run: docker build -t writing-analyzer-frontend:latest ./frontend

      - name: Tag and push backend image to ECR
        run: |
          docker tag writing-analyzer-backend:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-west-2.amazonaws.com/writing-analyzer-backend:latest
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-west-2.amazonaws.com/writing-analyzer-backend:latest

      - name: Tag and push frontend image to ECR
        run: |
          docker tag writing-analyzer-frontend:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-west-2.amazonaws.com/writing-analyzer-frontend:latest
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-west-2.amazonaws.com/writing-analyzer-frontend:latest

      - name: Get RDS Endpoint
        id: rds
        working-directory: ./terraform
        run: |
          # Disable terraform debug output and get clean endpoint
          export TF_LOG=OFF
          ENDPOINT=$(terraform output -raw rds_endpoint 2>/dev/null | head -n1)
          echo "endpoint=$ENDPOINT" >> $GITHUB_OUTPUT
          echo "RDS Endpoint: $ENDPOINT"

      - name: Configure kubectl
        run: |
          echo "Configuring kubectl for cluster: writing_analyzer_cluster"
          
          # Debug AWS credentials
          echo "AWS credentials check:"
          aws sts get-caller-identity
          
          # Configure kubectl
          aws eks update-kubeconfig --region us-west-2 --name writing_analyzer_cluster
          
          # Debug kubeconfig
          echo "Kubeconfig contents:"
          cat ~/.kube/config
          
          # Test kubectl connection
          kubectl get nodes

      - name: Create Kubernetes Secret
        run: |
          # Check if secret already exists and delete it first
          kubectl delete secret db-secret --ignore-not-found=true
          kubectl create secret generic db-secret \
            --from-literal=DATABASE_URL="postgresql://${{ secrets.DB_USERNAME }}:${{ secrets.DB_PASSWORD }}@${{ steps.rds.outputs.endpoint }}:5432/${{ secrets.DB_NAME }}"

      - name: Deploy to Kubernetes
        run: |
          echo "Deploying to Kubernetes..."
          kubectl apply -f k8s/
          echo "Deployment completed successfully"
